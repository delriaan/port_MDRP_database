---
title: "Medicaid Drug Rebate Program (MDRP) Database"
output: 
  html_notebook:
    code_folding: hide
---

```{r setup, warning=FALSE, message=FALSE}
.cran_libs <- c("purrr", "jsonlite", "httr", "summarytools", "munsell"
                , "SmartEDA", "htmltools", "slider", "stringi", "magrittr"
                , "DT", "data.table", "pdftools", "lubridate")
.git_libs <- paste0("book.of.", c("utilities", "features", "workflow"))
              
if (!"book.of.workflow" %in% dir(sprintf("%s/library", R.home()))){
  if (!"remotes" %in% dir(sprintf("%s/library", R.home()))){ 
    htmltools::tags$span(style = "text-deoration:italic; color:#333333; ", "... installing missing package 'remotes'")
    install.packages("remotes", repos = "https://cloud.r-project.org") 
  }
  
  htmltools::tags$span(style = "text-deoration:italic; color:#333333; ", "... installing missing packages 'book.of.utilities', 'book.of.features', 'book.of.workflow'")
  
  remotes::install_github("delriaan/book.of.utilities", subdir = "pkg")
  remotes::install_github("delriaan/book.of.features", subdir = "pkg")
  remotes::install_github("delriaan/book.of.workflow", subdir = "pkg")
}

library(book.of.workflow)
load_unloaded(!!!.cran_libs, autoinstall = TRUE)

urls <- list(
  data = list(
    `Data Dictionary` = "https://www.medicaid.gov/medicaid-chip-program-information/by-topics/prescription-drugs/downloads/recordspecficationanddefinitions.pdf"
    , Data = "https://download.medicaid.gov/data/drugproducts1q_2023.csv"
    ) |>
    imap(\(x, y) tags$li(tags$a(href = x, y))) |> tags$ol()
  , git_libs = map(.git_libs, \(x) tags$li(tags$a(title = paste0("delriaan/", x), x))) |> list() |> tags$ul()
  )
```

#  {.tabset .tabset-fade .tabset-pills}

## Purpose &<br> Metadata 

This project explores the Medicaid Drug Rebate Program (MDRP) database via [API](https://data.medicaid.gov/dataset/0ad65fe5-3ad3-5d79-a3f9-7893ded7963a) calls (dataset description [here](https://www.medicaid.gov/medicaid/prescription-drugs/medicaid-drug-rebate-program/medicaid-drug-rebate-program-data/index.html)):

`r urls$data`

### Required LIbraries

```{r, echo=FALSE, cache=TRUE, cache.lazy=TRUE}
tags$table(
  style = "width:475px; "
  , tags$tr(
    tags$th(style = "text-align:middle; border: solid 2px #AAAAFF; background-color:#EEEEEE; ", "CRAN", colspan = 2, width="65%")
    , tags$th(style = "text-align:middle; border: solid 2px #AAAAFF; background-color:#AAAAAA; ", width = "*", "GitHub")
    )
  , tags$tr(
      style = "align:top"
      , tags$td(style = "text-align:middle; background-color:#AAAAAA; "
                , map(.cran_libs[1:5], \(x) tags$li(x)) |> list() |> tags$ul())
      , tags$td(style = "text-align:middle; background-color:#AAAAAA; "
                , map(.cran_libs[6:length(.cran_libs)], \(x) tags$li(x)) |> list() |> tags$ul())
      , tags$td(style = "background-color:#EEEEEE; padding-right:20px; ", urls$git_libs)
      )
  ) |> tags$p()
```

## Data Summary <br><sup>Summarytools</sup> {.tabset .tabset-fade .tabset-pills}


```{r RETRIEVE_DATA, cache=TRUE,cache.lazy=TRUE}
api_data <- urls$data |> 
  as.character() |> 
  stri_extract_all_regex("http.+csv", simplify = TRUE) |> 
  as.vector() %T>% 
  (\(x) tags$p(sprintf("Retrieve data from '%s'", x)) |> print())() |>
  GET() |>
  content() |>
  rawToChar() |>
  (\(x) read.csv(text = x))() |>
  as.data.table(na.rm = FALSE)

api_dictionary <- invisible(urls$data |> 
  as.character() |> 
  stri_extract_all_regex("http.+pdf", simplify = TRUE) |> 
  as.vector() |>
  GET() |>
  content() |> 
  pdf_text())

.summary_labels <- names(api_data) |> 
  rlang::set_names() |>
  map_chr(\(x) stri_replace_all_fixed(x, ".", " ", vectorize_all = FALSE)) |>
  imap_chr(\(x, y){ 
    api_dictionary |> 
      stri_extract_all_regex(
        sprintf(
          fmt = "(%s)[:]\n.+"
          , stri_replace_all_fixed(
              x
              , c("Pkg"
                  , "Intro"
                  , "COD Status"
                  , "FDA Application Number"
                  , "FDA Therapeutic Equivalence Code"
                  )
              , c("Package"
                  , "Intro."
                  , "Covered Outpatient Drug [(]COD[)] Status"
                  , "FDA Application Number/OTC Monograph Number"
                  , "TEC"
                  )
              , vectorize_all = FALSE
              )
          )
        , simplify = TRUE
        ) |>
      stats::na.omit() |>
      as.vector() |>
      discard(\(x) x == "") %>%
      (\(i){ 
        .out <- ifelse(identical(character(), i), y, paste(i, collapse = "\n"))
        ifelse(stri_length(.out) > 50, paste0(.out, " ..."), .out)
      })()
  })

iwalk(.summary_labels, \(x, y){ 
  .label = x; api_data <<- modify_at(api_data, y, \(i){ attr(i, "label") <- .label; i 
  }) 
})

```


```{r EXPLORATION, warning=FALSE, message=FALSE, fig.dim=c(600,960)}
api_data %<>% { 
  modify_at(., c(4:7), as.character) %>% 
    modify_at(ls(., pattern = "Date"), lubridate::mdy)
}

api_data[runif(n= nrow(api_data)) <= 0.33, !"id"] |>
  dfSummary(labels.col = TRUE) |> 
  view(method = "render", report.title = "Medicaid Drug Rebate Program (MDRP) Data") 
```

## Temporal<br>Analysis 


